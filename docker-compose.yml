version: "3.8"

services:

  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: always
    ports:
      - '2182:2181'

  kafka:
    hostname: kafka
    image: wurstmeister/kafka:2.12-2.2.1
    container_name: kafka
    restart: always
    ports:
      - '9092:9092'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    volumes:
      - 'kafka-data:/var/run/docker.sock:/var/run/docker.sock'

  db:
    image: postgres:14.1-alpine
    container_name: postgres
    restart: always
    volumes:
      - 'db-data:/var/lib/postgresql/data'
    environment:
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: deal
    ports:
      - "5432:5432"

  dossier:
    hostname: dossier
    image: dossier
    container_name: dossier
    restart: always
    depends_on:
      - kafka
    ports:
      - "8084:8084"
    environment:
      KAFKA_HOST: kafka:9092
      DEAL_HOST: deal
      DEAL_PORT: 8082
    links:
      - 'kafka'

  conveyor:
    hostname: conveyor
    image: conveyor
    container_name: conveyor
    restart: always
    ports:
      - "8081:8081"

  deal:
    hostname: deal
    image: deal
    container_name: deal
    restart: always
    depends_on:
      - db
      - kafka
      - conveyor
    environment:
      POSTGRES_HOST: db
      POSTGRES_USER: benik
      POSTGRES_PASSWORD: 123
      POSTGRES_PORT: 5432
      KAFKA_HOST: kafka:9092
      CONVEYOR_HOST: conveyor
      CONVEYOR_PORT: 8081
    ports:
      - "8082:8082"

  application:
    hostname: application
    image: application
    container_name: application
    restart: always
    depends_on:
      - deal
    environment:
      DEAL_HOST: deal
      DEAL_PORT: 8082
    ports:
      - "8083:8083"

  gateway:
    hostname: gateway
    image: gateway
    container_name: gateway
    restart: always
    depends_on:
      - application
      - deal
    environment:
      DEAL_HOST: deal
      DEAL_PORT: 8082
      APPLICATION_HOST: application
      APPLICATION_PORT: 8083
    ports:
      - "8080:8080"

volumes:
  db-data:
  kafka-data: